import { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\n\nexport const useLikeSystem = (postId) => {\n  const [user, setUser] = useState(null);\n  const [isLiked, setIsLiked] = useState(false);\n  const [sessionId] = useState(() => {\n    let id = localStorage.getItem('forum_session_id');\n    if (!id) {\n      id = `session_${Date.now()}_${Math.random()}`;\n      localStorage.setItem('forum_session_id', id);\n    }\n    return id;\n  });\n\n  useEffect(() => {\n    initializeLikes();\n    \n    // Clear localStorage on logout\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((event) => {\n      if (event === 'SIGNED_OUT') {\n        localStorage.removeItem(`likes_${sessionId}`);\n        localStorage.removeItem('forum_session_id');\n      }\n    });\n    \n    return () => subscription.unsubscribe();\n  }, [postId, sessionId]);\n\n  const initializeLikes = async () => {\n    const { data: { user } } = await supabase.auth.getUser();\n    setUser(user);\n    \n    if (user?.email_confirmed_at) {\n      // Verified - check DB\n      const { data } = await supabase\n        .from('post_likes')\n        .select('id')\n        .eq('post_id', postId)\n        .eq('user_id', user.id)\n        .single();\n      setIsLiked(!!data);\n    } else {\n      // Unverified - check localStorage\n      const likes = JSON.parse(localStorage.getItem(`likes_${sessionId}`) || '[]');\n      setIsLiked(likes.includes(postId));\n    }\n  };\n\n  const toggleLike = async () => {\n    if (user?.email_confirmed_at) {\n      // Verified user - database\n      if (isLiked) {\n        await supabase.from('post_likes').delete().eq('post_id', postId).eq('user_id', user.id);\n      } else {\n        await supabase.from('post_likes').insert({ post_id: postId, user_id: user.id });\n      }\n    } else {\n      // Unverified user - localStorage\n      const likes = JSON.parse(localStorage.getItem(`likes_${sessionId}`) || '[]');\n      if (isLiked) {\n        const updated = likes.filter(id => id !== postId);\n        localStorage.setItem(`likes_${sessionId}`, JSON.stringify(updated));\n      } else {\n        likes.push(postId);\n        localStorage.setItem(`likes_${sessionId}`, JSON.stringify(likes));\n      }\n    }\n    setIsLiked(!isLiked);\n    return !isLiked;\n  };\n\n  return { isLiked, toggleLike, isVerified: !!user?.email_confirmed_at };\n};